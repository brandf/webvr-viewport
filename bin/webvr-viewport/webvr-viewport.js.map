{"version":3,"sources":["webpack:///webpack/bootstrap 4f267b576e4fa0342547?","webpack:///./src/webvr-viewport/webvr-viewport.js?"],"names":["WebVRViewport","width","height","_canvasElement","document","createElement","_eventListeners","_boundOnAnimationFrame","_onAnimationFrame","bind","_isPresenting","_projectionMatrix","Float32Array","_viewMatrix","_initVrDisplay","key","callback","listeners","isFirst","indexOf","push","_onFirstEventListener","_vrDisplay","leftEye","getEyeParameters","rightEye","Math","max","renderWidth","renderHeight","requestPresent","source","then","catch","err","console","log","JSON","stringify","navigator","getVRDisplays","displays","length","_frameData","VRFrameData","_requestAnimationFrame","requestAnimationFrame","window","timestamp","getFrameData","submitFrame","leftProjectionMatrix","rightProjectionMatrix","leftViewMatrix","rightViewMatrix"],"mappings":"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","file":"webvr-viewport.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4f267b576e4fa0342547","class WebVRViewport {\n  constructor(width, height) {\n    this._canvasElement = document.createElement('canvas');\n    this._canvasElement.width = width;\n    this._canvasElement.height = height;\n    this._eventListeners = {};\n    this._boundOnAnimationFrame = this._onAnimationFrame.bind(this);\n    this._isPresenting = false;\n\n    this._projectionMatrix = new Float32Array([\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ]);\n\n    this._viewMatrix = new Float32Array([\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ]);\n\n    this._initVrDisplay();\n  }\n\n  get canvasElement() {\n    return this._canvasElement;\n  }\n\n  get isPresenting() {\n    return this._isPresenting;\n  }\n\n  get leftProjectionMatrix() {\n    return this._isPresenting ? this._frameData.leftProjectionMatrix : this._projectionMatrix;\n  }\n\n  get rightProjectionMatrix() {\n    return this._isPresenting ? this._frameData.rightProjectionMatrix : this._projectionMatrix;\n  }\n\n  get leftViewMatrix() {\n    return this._isPresenting ? this._frameData.leftViewMatrix : this._viewMatrix;\n  }\n\n  get rightViewMatrix() {\n    return this._isPresenting ? this._frameData.rightViewMatrix : this._viewMatrix;\n  }\n\n  addEventListener(key, callback) {\n    let listeners = this._eventListeners[key];\n    let isFirst = false;\n    if (!listeners) {\n      listeners = [];\n      this._eventListeners[key] = listeners;\n      isFirst = true;\n    }\n\n    if (listeners.indexOf(callback) < 0) {\n      listeners.push(callback);\n    }\n\n    if (isFirst) {\n      this._onFirstEventListener(key);\n    }\n  }\n\n  enterVR() {\n    if (this._vrDisplay) {\n      // We must adjust the canvas (our VRLayer source) to match the VRDisplay\n      const leftEye = this._vrDisplay.getEyeParameters('left');\n      const rightEye = this._vrDisplay.getEyeParameters('right');\n\n      // This layer source is a canvas so we will update its width and height based on the eye parameters.\n      // For simplicity we will render each eye at the same resolution\n      this._canvasElement.width = Math.max(leftEye.renderWidth, rightEye.renderWidth) * 2;\n      this._canvasElement.height = Math.max(leftEye.renderHeight, rightEye.renderHeight);\n\n      this._vrDisplay.requestPresent([{ source: this._canvasElement }]).then(() => {\n        // TODO: emit event\n        this._isPresenting = true;\n      }).catch((err) => {\n        // TODO: emit event\n        console.log('webvr-viewport enterVR - ERROR:  ' + JSON.stringify(err));\n      });\n    }\n  }\n\n  _initVrDisplay() {\n    if (navigator.getVRDisplays) {\n      navigator.getVRDisplays().then((displays) => {\n        if (displays.length > 0) {\n          // We reuse this every frame to avoid generating garbage\n          this._frameData = new VRFrameData(); // eslint-disable-line no-undef\n          this._vrDisplay = displays[0];\n\n          // TODO: emit an event here that indicates VR display is available\n          // TODO: hook vrdisplay events on window in case it disconnects or is connected later\n        }\n      });\n    }\n  }\n  _onFirstEventListener(key) {\n    if (key === 'frame') {\n      this._requestAnimationFrame();\n    }\n  }\n\n  _requestAnimationFrame() {\n    if (this._vrDisplay) {\n      this._vrDisplay.requestAnimationFrame(this._boundOnAnimationFrame);\n    } else {\n      window.requestAnimationFrame(this._boundOnAnimationFrame);\n    }\n  }\n\n  _onAnimationFrame(timestamp) {\n    this._requestAnimationFrame();\n\n    if (this._isPresenting && this._vrDisplay) {\n      this._vrDisplay.getFrameData(this._frameData);\n    }\n\n    for (const callback of this._eventListeners['frame']) {\n      callback(timestamp);\n    }\n\n    if (this._isPresenting && this._vrDisplay) {\n      this._vrDisplay.submitFrame();\n    }\n  }\n}\n\nexport default WebVRViewport;\n\n\n\n// WEBPACK FOOTER //\n// ./src/webvr-viewport/webvr-viewport.js"],"sourceRoot":""}